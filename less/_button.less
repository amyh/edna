// Buttons
// 
// Let's assume that you know what a button is...
// 
// Styleguide 2

// Basic Button
// 
// Markup:
// <button class="btn {{modifier_class}}">Button</button>
// 
// .search               - Used in search pattern
// .primary              - Primary button choice
// .cancel              - Cancel button choice
// .disabled             - Disabled input state
// 
// Styleguide 2.1

.btn {
	.fontsize(1.9);

	@btn-height: 40px;
	@color: #333;

	& + & {
		margin-left: 10px;
	}

	height: @btn-height;
	padding: 0 21px;
	border-width: 1px;
	border-style: solid;
	background-color: @btn-bg;
	border-color: @btn-border;
	&:hover {
		background-color: @btn-bg-hover;
		border-color: @btn-border-hover;
	}

	vertical-align: top;
	cursor: pointer;

	border-color: @btn-border;
	border-radius: 4px;
	// button variations
	@list: primary, search, cancel, disabled;
	.loop(@arrayLength, @index: 1) when (@index =< @arrayLength) {
		@classVal: extract(@list, @index);

		// change stuff for the searchbar buttons
		& when (@classVal = search) {
			&.@{classVal} {
				background-color: ~'@{btn-@{classVal}-bg}';
				border-color: ~'@{btn-@{classVal}-border}';
				color: @colorS1;

				height: @searchbar-input-height;

				&:hover {
					background-color: ~'@{btn-@{classVal}-bg-hover}';
					border-color: ~'@{btn-@{classVal}-border-hover}';
				}
			}
		}
		// change stuff for the primary buttons
		& when (@classVal = primary) {
			&.@{classVal} {
				background-color: ~'@{btn-@{classVal}-bg}';
				border-color: ~'@{btn-@{classVal}-border}';
				color: @color;

				&:hover {
					background-color: ~'@{btn-@{classVal}-bg-hover}';
					border-color: ~'@{btn-@{classVal}-border-hover}';
				}
			}
		}
		// light colored backgrounds require a darker font-color
		& when (@classVal = cancel) {
			&.@{classVal} {
				background-color: ~'@{btn-@{classVal}-bg}';
				border-color: ~'@{btn-@{classVal}-border}';

				color: @color;
				// color: ~'@{btn-@{classVal}-color}';
				&:hover {
					background-color: ~'@{btn-@{classVal}-bg-hover}';
					border-color: ~'@{btn-@{classVal}-border-hover}';
				}
			}
		}
		// disabled buttons are... disabled!
		& when (@classVal = disabled) {
			&.@{classVal},
			&[@{classVal}] {
				background-color: ~'@{btn-@{classVal}-bg}' !important;
				border-color: ~'@{btn-@{classVal}-border}' !important;

				color: ~'@{btn-@{classVal}-color}' !important;
				&:hover {
					background-color: ~'@{btn-@{classVal}-bg}' !important;
					border-color: ~'@{btn-@{classVal}-border}' !important;
				}
			}
		}

		.loop(@arrayLength, (@index + 1));
	}
	.loop( length(@list) );

	.icon {
		width: 18px;
		height: 18px;
		margin: -5px 5px 0 -5px;
		vertical-align: middle;
		background-size: 100%;
	}
}