/* GRID */

// Grid
// 
// In the future Edna will use a 12 column grid for layout. This will eventually take over for the layout files. In the interim we will have both solutions.
// 
// Styleguide 28

// Columns
// 
// Markup:
// <div class="grid">
//     <div class="{{modifier_class}}"></div>
// </div>
// 
// col1			- second kind
// col2			- second kind
// col3			- second kind
// col4			- second kind
// col5			- second kind
// col6			- second kind
// col7			- second kind
// col8			- second kind
// col9			- second kind
// col10		- second kind
// col11		- second kind
// col12		- second kind
// 
// Styleguide 28.1

// Two Column Layout
// 
// Markup:
// <div class="grid">
//     <div class="col2"></div>
//     <div class="col10"></div>
// </div>
// 
// Styleguide 28.2

// Three Column Layout
// 
// Markup:
// <div class="grid">
//     <div class="col3"></div>
//     <div class="col6"></div>
//     <div class="col3"></div>
// </div>
// 
// Styleguide 28.3

// Four Column Layout
// 
// Markup:
// <div class="grid">
//     <div class="col3"></div>
//     <div class="col3"></div>
//     <div class="col3"></div>
//     <div class="col3"></div>
// </div>
// 
// Styleguide 28.4

// Five Column Layout
// 
// Markup:
// <div class="grid">
//     <div class="col2"></div>
//     <div class="col2"></div>
//     <div class="col4"></div>
//     <div class="col2"></div>
//     <div class="col2"></div>
// </div>
// 
// Styleguide 28.5

// layout loop
@media @mq-md, @mq-lg, @mq-xl {
	.grid {
		// the items to loop through
		@list: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;
		// get the length of @list
		@listLength: length(@list);

		.clearfix;
		
		// loop
		.loop(@arrayLength, @index: 1) when (@index =< @arrayLength) {
			// break out the value from the list
			@arrayVal: extract(@list, @index);
			// create the percent by dividing the arrayVal by the listLength
			@pcnt: percentage(@arrayVal / @listLength);
			// this declaration block gets output. once per key in the @list array 
			.col@{arrayVal} {
				display: block;
				float: left;
				width: @pcnt;
				padding: 0 15px;
			}
			// loop the loop
			.loop(@arrayLength, (@index + 1));
		}
		// do all the loop stuff
		.loop(@listLength);
	}
	// other CSS for the container of the new columns
	.grid {
		width: 100%;
		&:before,
		&:after {
			display: table;
			clear: both;

			content: '';
		}
	}
}

.grid {
	[class*=col] {
		padding: 10px;
		background-color: red;
		&:nth-child(1n+2) {
			border-left: 1px solid #fff;
		}
	}
}